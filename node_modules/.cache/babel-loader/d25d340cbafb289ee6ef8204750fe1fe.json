{"ast":null,"code":"import { Z_DEFAULT_STRATEGY } from \"zlib\"; // eslint-disable-line\n\nvar initialState = {\n  todoList: []\n};\nexport var todoReducer = function todoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      // 新しく追加するTODO\n      var todo = action.payload.todo; // stateを複製して追加\n\n      var newState = Object.assign({}, state);\n      newState.todoList.push(todo);\n      return newState;\n\n    case 'DEL_TODO':\n      var deltodo = action.payload.deltodo;\n      var delState = Object.assign({}, state);\n      delState.todoList.pop(deltodo);\n      return delState;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/takehikoogasawara/Documents/workspace/react/react-redux-todo/src/reducers/Todo.js"],"names":["Z_DEFAULT_STRATEGY","initialState","todoList","todoReducer","state","action","type","todo","payload","newState","Object","assign","push","deltodo","delState","pop"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC,C,CAA2C;;AAE3C,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIE,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACG,OAAP,CAAeD,IAA5B,CAFF,CAGE;;AACA,UAAME,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,CAAjB;AACAK,MAAAA,QAAQ,CAACP,QAAT,CAAkBU,IAAlB,CAAuBL,IAAvB;AACA,aAAOE,QAAP;;AACF,SAAK,UAAL;AACE,UAAMI,OAAO,GAAGR,MAAM,CAACG,OAAP,CAAeK,OAA/B;AACA,UAAMC,QAAQ,GAAGJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,CAAjB;AACAU,MAAAA,QAAQ,CAACZ,QAAT,CAAkBa,GAAlB,CAAsBF,OAAtB;AACA,aAAOC,QAAP;;AACF;AACE,aAAOV,KAAP;AAdJ;AAgBD,CAjBM","sourcesContent":["import { Z_DEFAULT_STRATEGY } from \"zlib\"; // eslint-disable-line\n\nconst initialState = {\n    todoList: []\n  }\n  \n  export const todoReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'ADD_TODO':\n        // 新しく追加するTODO\n        const todo = action.payload.todo;\n        // stateを複製して追加\n        const newState = Object.assign({}, state);\n        newState.todoList.push(todo);\n        return newState;\n      case 'DEL_TODO' :\n        const deltodo = action.payload.deltodo;\n        const delState = Object.assign({}, state);\n        delState.todoList.pop(deltodo);\n        return delState;\n      default:\n        return state;\n    }\n  };\n\n"]},"metadata":{},"sourceType":"module"}